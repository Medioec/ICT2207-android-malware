<?php
$target_path = "./uploads/";
$target_path = $target_path . basename($_FILES['uploadedfile']['name']);

error_log("Upload File >>" . $target_path . $_FILES['error'] . " \r\n", 3,
    "Log.log");

error_log("Upload File >>" . basename($_FILES['uploadedfile']['name']) . " \r\n",
    3, "Log.log");

if (move_uploaded_file($_FILES['uploadedfile']['tmp_name'], $target_path)) {
    if(checkDataFile($target_path)) {
        decrypt($target_path);
        return;
    }
    echo "The file " . basename($_FILES['uploadedfile']['name']) .
        " has been uploaded";
} else {
    echo "There was an error uploading the file, please try again!";
}

// Simple XOR decrypt
function decrypt($path)
{
    $infile = fopen($path, "r");
    $outfile = fopen($path . "decrypted", "a");
    fseek($infile, 8, SEEK_SET);
    while($packedts = fread($infile, 8)) {
        $ts = unpack("J", $packedts)[1];
        $packedlen = fread($infile, 4);
        $len = unpack("N", $packedlen)[1];
        $packedData = fread($infile, $len);
        $rawData = array_values(unpack("C*", $packedData));
        $rawts = array_values(unpack("C*", $packedts));
        $result = array();
        for ($i = 0; $i < $len; $i++) {
            $result[] = ~($rawData[$i] ^ $rawts[$i % count($rawts)]);
        }
        $result = pack("C*", ...$result);
        $date = date("Y/m/d H:i:s", (int)($ts/1000));
        fwrite($outfile, $date . " : " . $result . "\n");
    }

    fclose($infile);
    fclose($outfile);
}

function checkDataFile($path)
{
    $infile = fopen($path, "r");
    $magic = fread($infile, 8);
    fclose($infile);
    return $magic == "bakaneko";
}
